# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.1.0
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  aws-cli-cred-setup:
    executor: aws-cli/default
    description: AWS Env Setup
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET
          aws-region: AWS_REGION
  deploy-api:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - node/install
      - checkout
      - run:
          name: "Udagram-api Install"
          command: |
            npm run backend:install
      - run:
          name: "Udagram-api build"
          command: |
            npm run backend:build
      - run:
          name: "Udagram-api Deploying to Elastic beanstalk"
          command: |
            npm run backend:deploy
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  deploy-full-project-workflow:
    jobs:
      - aws-cli-cred-setup
      - deploy-api